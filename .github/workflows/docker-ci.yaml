name: Docker CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: ["*.*.*"]
    paths-ignore:
      - "mkdocs.yml"
      - "docs/**"
      - "**.md"
      - "**.mdx"
      - "**.png"
      - "**.jpg"
      - "**.gif"
      - "Dockerfile.rocm.base"
      - "Dockerfile.dcu.base"
  pull_request:
    branches: [main]
    paths:
      - "Dockerfile"
      - "Dockerfile.*"
      - ".github/workflows/docker-ci.yaml"
      - "!Dockerfile.rocm.base"
      - "!Dockerfile.dcu.base"

jobs:
  publish-docker:
    permissions:
      contents: write
      actions: read
      id-token: write
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          #
          # Nvidia CUDA
          #
          - device: cuda
            dockerfile: "Dockerfile"
            platforms: "linux/amd64"
            tag_suffix: ""
            build_args:
              - "CUDA_VERSION=12.4.1"
          #
          # HIP RoCM
          #
          - device: rocm
            dockerfile: "Dockerfile.rocm"
            platforms: "linux/amd64,linux/arm64"
            tag_suffix: "-rocm"
            build_args:
              - "BUILD_FA=0"
          #
          # Ascend NPU
          #
          - device: npu
            dockerfile: "Dockerfile.npu"
            platforms: "linux/amd64,linux/arm64"
            tag_suffix: "-npu"
            build_args:
              - "CANN_CHIP=910b"
          - device: npu
            dockerfile: "Dockerfile.npu"
            platforms: "linux/amd64,linux/arm64"
            tag_suffix: "-npu-310p"
            build_args:
              - "CANN_CHIP=310p"
          #
          # MooreThreads MUSA
          #
          - device: musa
            dockerfile: "Dockerfile.musa"
            platforms: "linux/amd64,linux/arm64"
            tag_suffix: "-musa"
            build_args: []
          #
          # Hygon DCU
          #
          - device: dcu
            dockerfile: "Dockerfile.dcu"
            platforms: "linux/amd64"
            tag_suffix: "-dcu"
            build_args: []

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Maximize Docker Build Space
        uses: gpustack/.github/.github/actions/maximize-docker-build-space@main
        with:
          deep-clean: false
          root-reserve-mb: 20480
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5
          platforms: "arm64"
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login DockerHub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
      - name: Get Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: gpustack/gpustack
          tags: |
            type=pep440,pattern={{raw}}
            type=pep440,pattern=v{{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'rc') }}
          flavor: |
            latest=false
            suffix=${{ matrix.tag_suffix }}
      - name: Package
        uses: docker/build-push-action@v5
        id: package
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ github.workspace }}/${{ matrix.dockerfile }}
          context: ${{ github.workspace }}
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          provenance: true
          sbom: true
          build-args: |
            ${{ matrix.build_args }}
          cache-from: |
            type=registry,ref=gpustack/build-cache:gpustack${{ matrix.tag_suffix }}
          cache-to: |
            ${{ github.event_name != 'pull_request' && format('type=registry,mode=max,oci-mediatypes=false,compression=gzip,ref=gpustack/build-cache:gpustack{0},ignore-error=true', matrix.tag_suffix) || '' }}
