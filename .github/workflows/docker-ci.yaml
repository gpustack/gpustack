name: Docker CI

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: ["*.*.*"]
    paths-ignore:
      - "mkdocs.yml"
      - "docs/**"
      - "**.md"
      - "**.mdx"
      - "**.png"
      - "**.jpg"
      - "**.gif"
      - "Dockerfile.rocm.base"
      - "Dockerfile.dcu.base"
  pull_request:
    branches: [main]
    paths:
      - "Dockerfile"
      - "Dockerfile.*"
      - ".github/workflows/docker-ci.yaml"
      - "!Dockerfile.rocm.base"
      - "!Dockerfile.dcu.base"

jobs:
  publish-docker:
    permissions:
      contents: write
      actions: read
      id-token: write
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        device: ["cuda", "musa", "npu", "rocm", "cpu", "dcu"]
    env:
      PACKAGE_REGISTRY: ${{ vars.PACKAGE_REGISTRY || 'gpustack'}}
      PACKAGE_IMAGE: ${{ vars.PACKAGE_IMAGE || 'gpustack' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: Maximize Docker Build Space
        uses: gpustack/.github/.github/actions/maximize-docker-build-space@main
        with:
          deep-clean: false
          root-reserve-mb: 20480
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0
          platforms: "arm64"
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login DockerHub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.CI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
      - name: Get Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PACKAGE_REGISTRY }}/${{ env.PACKAGE_IMAGE }}
          tags: |
            type=pep440,pattern={{raw}}
            type=pep440,pattern=v{{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'rc') }}
          # set no tag suffix for cuda as the default, set -{device} suffix for others
          flavor: |
            latest=false
            suffix=${{ matrix.device != 'cuda' && format('-{0}', matrix.device) || '' }}
      - name: Package
        uses: docker/build-push-action@v5
        id: package
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ github.workspace }}/${{ matrix.device == 'cuda' && 'Dockerfile' || format('Dockerfile.{0}', matrix.device) }}
          context: ${{ github.workspace }}
          platforms: ${{ (matrix.device == 'rocm' || matrix.device == 'dcu') && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          provenance: true
          sbom: true
          build-args: |
            ${{ matrix.device == 'rocm' && 'BUILD_FA="0"' || '' }}
