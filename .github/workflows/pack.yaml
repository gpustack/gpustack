# This workflow packs the Docker images for the GPUStack runtime.

name: Pack

permissions:
  actions: read
  contents: write
  pull-requests: write

defaults:
  run:
    shell: bash

on:
  workflow_dispatch: {}
  push:
    branches:
      - "main"
      - "v*-dev"
    tags:
      - "v*.*.*"
    paths-ignore:
      - "mkdocs.yml"
      - "docs/**"
      - "**.md"
      - "**.mdx"
      - "**.png"
      - "**.jpg"
      - "**.gif"
  pull_request:
    branches:
      - "main"
      - "v*-dev"
    paths:
      - ".github/workflows/pack.yaml"
      - "pack/**"

env:
  INPUT_PYTHON_VERSION: 3.11
  INPUT_USERNAME: gpustack
  INPUT_PASSWORD: ${{ secrets.CI_DOCKERHUB_PASSWORD }}
  INPUT_NAMESPACE: gpustack
  INPUT_REPOSITORY: gpustack

jobs:
  pack:
    runs-on: ubuntu-22.04
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false
      - name: Maximize Docker Build Space
        uses: gpustack/.github/.github/actions/maximize-docker-build-space@main
        with:
          deep-clean: true
          root-reserve-mb: 20480
      - name: Setup BuildX Cache
        id: setup-buildx-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.cache
          key: cache-mount-${{ hashFiles('poetry.lock') }}
      - name: Restore BuildX Cache
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.setup-buildx.outputs.name }}
          cache-dir: ${{ github.workspace }}/.cache
          dockerfile: ${{ github.workspace }}/pack/Dockerfile
          skip-extraction: ${{ steps.setup-buildx-cache.outputs.cache-hit }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v9.2.2
          platforms: "arm64"
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            env.BUILDKIT_STEP_LOG_MAX_SIZE=-1
            env.BUILDKIT_STEP_LOG_MAX_SPEED=-1
      - name: Login DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.INPUT_USERNAME }}
          password: ${{ env.INPUT_PASSWORD }}
      - name: Get Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.INPUT_NAMESPACE }}/${{ env.INPUT_REPOSITORY }}"
      - name: Get Cache Ref
        run: |
          #
          # Use different cache ref for different branches.
          #
          # Examples:
          # CACHE_FROM_REF
          #   - vX.Y.Z                 -> "gpustack/build-cache:gpustack-${VERSION|DEFAULT_BRANCH}"
          #   - PR/PUSH to branch      -> "gpustack/build-cache:gpustack-${BRANCH|DEFUALT_BRANCH}"
          # CACHE_TO_REF
          #   - vX.Y.Z                 -> "gpustack/build-cache:gpustack-${VERSION}"
          #   - PUSH to branch         -> "gpustack/build-cache:gpustack-${BRANCH}"
          #
          # Stories:
          # CACHE_FROM_REF
          #   - Release tag v0.7.0rc1      -> gpustack/build-cache:gpustack-v0.7, if not found, fallback to gpustack/build-cache:gpustack-main
          #   - Release tag v0.7.0         -> gpustack/build-cache:gpustack-v0.7
          #   - PR to "main" branch        -> gpustack/build-cache:gpustack-main
          #   - PR to "v0.7-dev" branch    -> gpustack/build-cache:gpustack-v0.7, if not found, fallback to gpustack/build-cache:gpustack-main
          #   - Push to "main" branch      -> gpustack/build-cache:gpustack-main
          #   - Push to "v0.7-dev" branch  -> gpustack/build-cache:gpustack-v0.7, if not found, fallback to gpustack/build-cache:gpustack-main
          # CACHE_TO_REF
          #   - Release tag v0.7.0rc1      -> gpustack/build-cache:gpustack-v0.7
          #   - Release tag v0.7.0         -> gpustack/build-cache:gpustack-v0.7
          #   - PR to "main" branch        -> gpustack/build-cache:gpustack-main
          #   - PR to "v0.7-dev" branch    -> gpustack/build-cache:gpustack-v0.7
          #   - Push to "main" branch      -> gpustack/build-cache:gpustack-main
          #   - Push to "v0.7-dev" branch  -> gpustack/build-cache:gpustack-v0.7
          #
          DEFAULT_BRANCH="main"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            REF="${GITHUB_REF#refs/tags/}"
            IFS="." read -r VERSION_MAJOR VERSION_MINOR VERSION_PATCH <<< "${REF}"
            VERSION="${VERSION_MAJOR}.${VERSION_MINOR}"
            CACHE_FROM_REF="gpustack/build-cache:gpustack-${VERSION}"
            CACHE_TO_REF="${CACHE_FROM_REF}"
          else
            REF="${GITHUB_BASE_REF:-${GITHUB_REF}}"
            BRANCH="${REF#refs/heads/}"
            BRANCH="${BRANCH%-dev}"
            CACHE_FROM_REF="gpustack/build-cache:gpustack-${BRANCH}"
            CACHE_TO_REF="${CACHE_FROM_REF}"
          fi
          if ! docker manifest inspect "${CACHE_FROM_REF}" >/dev/null 2>&1; then
            CACHE_FROM_REF="gpustack/build-cache:gpustack-${DEFAULT_BRANCH}"
          fi
          echo "CACHE_FROM_REF=${CACHE_FROM_REF}" >> $GITHUB_ENV
          echo "CACHE_TO_REF=${CACHE_TO_REF}" >> $GITHUB_ENV
          echo "DEBUG: GITHUB_BASE_REF=${GITHUB_BASE_REF}"
          echo "DEBUG: GITHUB_REF=${GITHUB_REF}"
          echo "DEBUG: CACHE_FROM_REF=${CACHE_FROM_REF}"
          echo "DEBUG: CACHE_TO_REF=${CACHE_TO_REF}"
      - name: Package
        uses: docker/build-push-action@v6
        with:
          allow: |
            network.host
            security.insecure
          ulimit: |
            nofile=65536:65536
          provenance: true
          sbom: true
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ github.workspace }}/pack/Dockerfile
          context: ${{ github.workspace }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            PYTHON_VERSION=${{ env.INPUT_PYTHON_VERSION }}
          tags: |
            ${{ steps.metadata.outputs.tags }}
          labels: |
            ${{ steps.metadata.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_FROM_REF }}
          cache-to: |
            ${{ github.event_name != 'pull_request' && format('type=registry,mode=max,compression=gzip,ref={0},ignore-error=true', env.CACHE_TO_REF) || '' }}
